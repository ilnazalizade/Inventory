//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataModelLayer
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class inventorydbEntities1 : DbContext
    {
        public inventorydbEntities1()
            : base("name=inventorydbEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<Inventory> Inventories { get; set; }
        public virtual DbSet<Product> Products { get; set; }
        public virtual DbSet<ProductPrice> ProductPrices { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<Vw_Customer> Vw_Customer { get; set; }
        public virtual DbSet<Vw_Inventory> Vw_Inventory { get; set; }
        public virtual DbSet<Vw_Product> Vw_Product { get; set; }
        public virtual DbSet<Vw_ProductPrice> Vw_ProductPrice { get; set; }
        public virtual DbSet<Vw_Users> Vw_Users { get; set; }
        public virtual DbSet<database_firewall_rules> database_firewall_rules { get; set; }
    
        public virtual int Sp_ins_product(string productName, string productDesc, byte[] productImage, Nullable<int> userId)
        {
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            var productDescParameter = productDesc != null ?
                new ObjectParameter("ProductDesc", productDesc) :
                new ObjectParameter("ProductDesc", typeof(string));
    
            var productImageParameter = productImage != null ?
                new ObjectParameter("ProductImage", productImage) :
                new ObjectParameter("ProductImage", typeof(byte[]));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_ins_product", productNameParameter, productDescParameter, productImageParameter, userIdParameter);
        }
    
        public virtual int Sp_UpdateFee_Product(Nullable<int> productId, Nullable<long> productLastFee)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            var productLastFeeParameter = productLastFee.HasValue ?
                new ObjectParameter("ProductLastFee", productLastFee) :
                new ObjectParameter("ProductLastFee", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_UpdateFee_Product", productIdParameter, productLastFeeParameter);
        }
    
        public virtual int Sp_Update_ProductLastStock(Nullable<int> inventoryCount, Nullable<int> productId)
        {
            var inventoryCountParameter = inventoryCount.HasValue ?
                new ObjectParameter("InventoryCount", inventoryCount) :
                new ObjectParameter("InventoryCount", typeof(int));
    
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_ProductLastStock", inventoryCountParameter, productIdParameter);
        }
    
        public virtual int Sp_Update_Product(Nullable<int> productId, string productName, string productDesc, byte[] productImage)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            var productDescParameter = productDesc != null ?
                new ObjectParameter("ProductDesc", productDesc) :
                new ObjectParameter("ProductDesc", typeof(string));
    
            var productImageParameter = productImage != null ?
                new ObjectParameter("ProductImage", productImage) :
                new ObjectParameter("ProductImage", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_Product", productIdParameter, productNameParameter, productDescParameter, productImageParameter);
        }
    }
}
